<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>MacOS - Tag - t-lark.github.io</title>
        <link>https://t-lark.github.io/tags/macos/</link>
        <description>MacOS - Tag - t-lark.github.io</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Thu, 25 Jan 2024 20:24:28 -0800</lastBuildDate><atom:link href="https://t-lark.github.io/tags/macos/" rel="self" type="application/rss+xml" /><item>
    <title>More Osquery Data Modeling in Snowflake</title>
    <link>https://t-lark.github.io/posts/more-osquery-data-modeling-snowflake/</link>
    <pubDate>Thu, 25 Jan 2024 20:24:28 -0800</pubDate>
    <author>tlark</author>
    <guid>https://t-lark.github.io/posts/more-osquery-data-modeling-snowflake/</guid>
    <description><![CDATA[<h1 id="data-modeling-osquery-data-in-snowflake">Data Modeling osquery Data in Snowflake</h1>
<p>We have been working on many projects the past few months, and osquery data pipelines with the help of <a href="https://fleetdm.com/" target="_blank" rel="noopener noreffer ">FleetDM</a>
has been one of our constant works in progress. Before I dive into the data modeling part, I wanted to share how we scaled
this data out. We ended up going forward with FleetDM&rsquo;s SaaS offering over self-hosting the app. However, we are still
streaming query results from FleetDM cloud to Snowflake over <a href="https://aws.amazon.com/kinesis/data-firehose/" target="_blank" rel="noopener noreffer ">AWS Kinesis Firehose</a> and
we now have data streaming from FleetDM into Snowflake at a very fast rate and high volume. We are typically collecting
data from osquery every hour on most things, and we have a lesser number of queries that run every 12 hours or once a
day.</p>]]></description>
</item>
<item>
    <title>Working with osquery Data in Snowflake</title>
    <link>https://t-lark.github.io/posts/osquery-data-in-snowflake/</link>
    <pubDate>Thu, 31 Aug 2023 18:01:31 -0700</pubDate>
    <author>tlark</author>
    <guid>https://t-lark.github.io/posts/osquery-data-in-snowflake/</guid>
    <description><![CDATA[<p>I recently told my dog, Booms, all about how you can use osquery data in Snowflake. Needless to say, he was quite impressed
with all the use cases and in-depth data you can model about your fleet of laptops using osquery data in Snowflake.</p>
<a class="lightgallery" href="/img/booms-snow1.jpg" title="/img/booms-snow1.jpg" data-thumbnail="/img/booms-snow1.jpg">
        
    </a>
<blockquote>
<p>Booms came to the office with me, and he even got a bit of company swag! As we spent the day working I told him
all about all the work my team was doing with osquery. Anyone can see in this pic of him, he is very impressed
with the speed and scale one can leverage data from osquery in Snowflake</p>]]></description>
</item>
<item>
    <title>Using Spotlight with macOS</title>
    <link>https://t-lark.github.io/posts/using-spotlight-macos/</link>
    <pubDate>Wed, 23 Sep 2020 18:22:00 -0700</pubDate>
    <author>tlark</author>
    <guid>https://t-lark.github.io/posts/using-spotlight-macos/</guid>
    <description><![CDATA[<p><a href="https://en.wikipedia.org/wiki/Spotlight_%28software%29" target="_blank" rel="noopener noreffer ">Spotlight</a> is a system wide metadata indexing system that Apple has been
shipping since <code>OS X 10.4 Tiger</code>, and has been improved over the years with each OS. I like using Spotlight for some tasks
and general searching for files in Terminal.app.  I also use it for finding anything on my Mac. Typically, I do not use my mouse
or trackpad to find files or navigate to folders. One just needs to hit <code>cmd + spacebar</code> on their Mac to pull up the Spotlight
search menu and start typing.  If you use a Mac, there is a good chance you also use this regularly like I do.  This isn&rsquo;t
anything groundbreaking or new, but I have enjoyed using Spotlight over the years when it fits as a good tool.</p>]]></description>
</item>
<item>
    <title>Shipping Your Own Python to macOS</title>
    <link>https://t-lark.github.io/posts/shipping-python/</link>
    <pubDate>Sun, 20 Sep 2020 17:52:37 -0700</pubDate>
    <author>tlark</author>
    <guid>https://t-lark.github.io/posts/shipping-python/</guid>
    <description><![CDATA[<p></p>
<p>With the announcement at Catalina&rsquo;s release that some third party run times will be removed, and the fact that Python 2
is end of life it is time to ship your own.  Just like everything in tech, there are many ways to accomplish this. I have
been using a tool for about over a year now called <a href="https://github.com/gregneagle/relocatable-python" target="_blank" rel="noopener noreffer ">relocatable python</a>.</p>
<p>The reasons I chose to use <code>relocatable python</code> were pretty good ones in my opinion.  They are:</p>]]></description>
</item>
</channel>
</rss>
