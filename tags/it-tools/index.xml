<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>IT Tools - Tag - t-lark.github.io</title>
        <link>https://t-lark.github.io/tags/it-tools/</link>
        <description>IT Tools - Tag - t-lark.github.io</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Thu, 25 Jan 2024 20:24:28 -0800</lastBuildDate><atom:link href="https://t-lark.github.io/tags/it-tools/" rel="self" type="application/rss+xml" /><item>
    <title>More Osquery Data Modeling in Snowflake</title>
    <link>https://t-lark.github.io/posts/more-osquery-data-modeling-snowflake/</link>
    <pubDate>Thu, 25 Jan 2024 20:24:28 -0800</pubDate>
    <author>tlark</author>
    <guid>https://t-lark.github.io/posts/more-osquery-data-modeling-snowflake/</guid>
    <description><![CDATA[<h1 id="data-modeling-osquery-data-in-snowflake">Data Modeling osquery Data in Snowflake</h1>
<p>We have been working on many projects the past few months, and osquery data pipelines with the help of <a href="https://fleetdm.com/" target="_blank" rel="noopener noreffer ">FleetDM</a>
has been one of our constant works in progress. Before I dive into the data modeling part, I wanted to share how we scaled
this data out. We ended up going forward with FleetDM&rsquo;s SaaS offering over self-hosting the app. However, we are still
streaming query results from FleetDM cloud to Snowflake over <a href="https://aws.amazon.com/kinesis/data-firehose/" target="_blank" rel="noopener noreffer ">AWS Kinesis Firehose</a> and
we now have data streaming from FleetDM into Snowflake at a very fast rate and high volume. We are typically collecting
data from osquery every hour on most things, and we have a lesser number of queries that run every 12 hours or once a
day.</p>]]></description>
</item>
<item>
    <title>Working with osquery Data in Snowflake</title>
    <link>https://t-lark.github.io/posts/osquery-data-in-snowflake/</link>
    <pubDate>Thu, 31 Aug 2023 18:01:31 -0700</pubDate>
    <author>tlark</author>
    <guid>https://t-lark.github.io/posts/osquery-data-in-snowflake/</guid>
    <description><![CDATA[<p>I recently told my dog, Booms, all about how you can use osquery data in Snowflake. Needless to say, he was quite impressed
with all the use cases and in-depth data you can model about your fleet of laptops using osquery data in Snowflake.</p>
<a class="lightgallery" href="/img/booms-snow1.jpg" title="/img/booms-snow1.jpg" data-thumbnail="/img/booms-snow1.jpg">
        
    </a>
<blockquote>
<p>Booms came to the office with me, and he even got a bit of company swag! As we spent the day working I told him
all about all the work my team was doing with osquery. Anyone can see in this pic of him, he is very impressed
with the speed and scale one can leverage data from osquery in Snowflake</p>]]></description>
</item>
<item>
    <title>Diversifying Your IT Tools: Integrating Munki</title>
    <link>https://t-lark.github.io/posts/diversifying-your-tools-munki/</link>
    <pubDate>Sun, 22 Jan 2023 21:52:42 -0700</pubDate>
    <author>tlark</author>
    <guid>https://t-lark.github.io/posts/diversifying-your-tools-munki/</guid>
    <description><![CDATA[<p>Hello Everyone, and it has been a while since my last blog post. I have been busy with work and with some other things
outside of work as well. However, we did finally release Munki to our fleet last summer. This was a milestone project for us, and
while we aren&rsquo;t the first Org to do this, I wanted to share with the community how and why we did this. Everything I will
write here has probably already been done by many other Orgs that currently use Munki, and we aren&rsquo;t really doing much
that is radically different. So, if you hae deployed a server-less Munki setup before, this is probably not going to be
new to you. That being said, <code>server-less</code> is a pretty key word for our vision here.</p>]]></description>
</item>
<item>
    <title>Data-Enabled: Post Nudge Campaign Results</title>
    <link>https://t-lark.github.io/posts/data-enabled-nudge-results/</link>
    <pubDate>Fri, 01 Jul 2022 18:11:46 -0700</pubDate>
    <author>tlark</author>
    <guid>https://t-lark.github.io/posts/data-enabled-nudge-results/</guid>
    <description><![CDATA[<h3 id="data-enabled-post-nudge-campaign-results">Data-Enabled: Post Nudge Campaign Results</h3>
<p>A lot of Organizations have adopted things like <a href="https://www.cisecurity.org/controls" target="_blank" rel="noopener noreffer ">CIS Controls</a> and part of those
controls are around patching and vulnerability management. Depending on what version of the CIS controls you are using, this
could be <a href="https://www.cisecurity.org/controls/cis-controls-navigator/?version=7" target="_blank" rel="noopener noreffer ">CIS 3</a> or <a href="https://www.cisecurity.org/controls/cis-controls-navigator/" target="_blank" rel="noopener noreffer ">CIS 7</a>.
This can already be confusing as the controls are very similar between versions but the have moved places in the CIS
framework. One thing I think most tech and security professionals can agree upon, is that patching often to the latest
operating systems is a great way to avoid your fleet of devices from being exploited. Known vulnerabilities have a shelf life,
and bad actors know that some organizations do not patch, or patch extremely slow. So, they develop attacks against
known published vulnerabilities.</p>]]></description>
</item>
<item>
    <title>IT &amp; Ops Data with Snowflake Part III</title>
    <link>https://t-lark.github.io/posts/ops-data-snowflake-pt3/</link>
    <pubDate>Tue, 10 Aug 2021 20:02:00 -0700</pubDate>
    <author>tlark</author>
    <guid>https://t-lark.github.io/posts/ops-data-snowflake-pt3/</guid>
    <description><![CDATA[<h1 id="gain-oversight-of-your-asset-inventory-with-snowflake">Gain Oversight of your Asset Inventory with Snowflake</h1>
<p>Welcome to Part III of my mini blog series on being data driven with Snowflake. This post will be solely dedicated to
how an organization can leverage a platform like Snowflake to improve their asset and inventory controls. Both <a href="https://t-lark.github.io/posts/ops-data-snowflake/" target="_blank" rel="noopener noreffer ">Part I</a>
and <a href="https://t-lark.github.io/posts/ops-data-snowflake-pt2/" target="_blank" rel="noopener noreffer ">Part II</a> can be viewed with those links if you haven&rsquo;t read
them yet. This post will focus on end user devices for the most part and not networking hardware, application catalogs,
servers, and so forth.  The concepts in this post could be applied to those things though.</p>]]></description>
</item>
<item>
    <title>IT &amp; Ops Data with Snowflake Part II</title>
    <link>https://t-lark.github.io/posts/ops-data-snowflake-pt2/</link>
    <pubDate>Thu, 22 Apr 2021 20:02:00 -0700</pubDate>
    <author>tlark</author>
    <guid>https://t-lark.github.io/posts/ops-data-snowflake-pt2/</guid>
    <description><![CDATA[<h1 id="working-with-data-in-snowflake">Working with Data in Snowflake</h1>
<p>Welcome to Part II of my miniseries blog around Snowflake with IT &amp; Ops Data. If you have not read <a href="https://t-lark.github.io/posts/ops-data-snowflake/" target="_blank" rel="noopener noreffer ">Part I</a>,
you may click that link to read it first. Data has always been very important, and Snowflake just makes using the data a ton
easier than we have ever had before. This post will focus on some basic ways one can work with data with in Snowflake.
For this blog I will be focusing on JSON data stored in Snowflake columns. <a href="https://en.wikipedia.org/wiki/JSON" target="_blank" rel="noopener noreffer ">JSON</a> documents are very common all over tech. Especially in things
like <a href="https://en.wikipedia.org/wiki/Representational_state_transfer" target="_blank" rel="noopener noreffer ">REST APIs</a>, so if you haven&rsquo;t worked with JSON
you will work with JSON data most likely at some point.</p>]]></description>
</item>
<item>
    <title>IT &amp; Ops Data with Snowflake Part I</title>
    <link>https://t-lark.github.io/posts/ops-data-snowflake/</link>
    <pubDate>Thu, 15 Apr 2021 20:00:08 -0700</pubDate>
    <author>tlark</author>
    <guid>https://t-lark.github.io/posts/ops-data-snowflake/</guid>
    <description><![CDATA[<h1 id="be-data-driven-in-itops-with-snowflake">Be Data Driven in IT/Ops with Snowflake</h1>
<p>Technology changes very fast, and it keeps getting bigger and more complex.  We have so many systems these days, our
systems have systems.  It doesn&rsquo;t have to be complex and daunting to get reliable, and up-to-date data. Getting accurate
data, while getting it fast, is key to developing data driven strategies.  We no longer have to live in the constraints of
capacity, limited storage, and limited scalability. With the power and scale of the cloud, you can now simply just ship all of
your IT/Ops data to a centralized location and share it among your teams.</p>]]></description>
</item>
</channel>
</rss>
