<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Labels - Tag - t-lark.github.io</title>
        <link>https://t-lark.github.io/tags/labels/</link>
        <description>Labels - Tag - t-lark.github.io</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Thu, 21 Mar 2024 17:45:59 -0700</lastBuildDate><atom:link href="https://t-lark.github.io/tags/labels/" rel="self" type="application/rss+xml" /><item>
    <title>Using Custom MDM Payloads for FleetDM Labels</title>
    <link>https://t-lark.github.io/posts/using-custom-mdm-payloads-for-fleet-labels/</link>
    <pubDate>Thu, 21 Mar 2024 17:45:59 -0700</pubDate>
    <author>tlark</author>
    <guid>https://t-lark.github.io/posts/using-custom-mdm-payloads-for-fleet-labels/</guid>
    <description><![CDATA[<h1 id="programmatically-apply-fleetdm-labels-from-identity-data">Programmatically Apply FleetDM Labels from Identity Data</h1>
<p>For a long time now it has been considered a &ldquo;bad practice,&rdquo; to join a macOS computer to any sort of directory service.
Long have past the days of Binding to Active Directory, and the ancient lore of <a href="https://krypted.com/tag/magic-triangle/" target="_blank" rel="noopener noreffer ">the golden (or magic) triangle</a>
is nearly lost in time, like tears in the rain. The one thing that we could consider missing from these days was the
ability to locally query user and identity data through native tools like <code>dscl</code> in macOS. I have seen very clever
replacement solutions over the years to get this data down to a macOS end user devices across various enterprises, but
one thing has always bothered me about every method I have seen or sometimes used. The common theme was that they were all not very
security focused solutions. At a previous job, LDAP lookups were just straight up open to anyone on network, like it did
not have any authentication at all. When I was in vendor space I witnessed customers having various <code>curl</code> solutions
to grab that data from some system they could cache locally. Typically, these also were not very secure either.</p>]]></description>
</item>
</channel>
</rss>
