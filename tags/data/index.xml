<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>data - Tag - t-lark.github.io</title>
        <link>https://t-lark.github.io/tags/data/</link>
        <description>data - Tag - t-lark.github.io</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Tue, 26 Mar 2024 18:43:26 -0700</lastBuildDate><atom:link href="https://t-lark.github.io/tags/data/" rel="self" type="application/rss+xml" /><item>
    <title>Leveraging Application Usage Data From Munki</title>
    <link>https://t-lark.github.io/posts/app-usage-data-munki-fleet-snowflake/</link>
    <pubDate>Tue, 26 Mar 2024 18:43:26 -0700</pubDate>
    <author>tlark</author>
    <guid>https://t-lark.github.io/posts/app-usage-data-munki-fleet-snowflake/</guid>
    <description><![CDATA[Getting Application Usage Data at Scale With Munki Munki is a series of tools and a popular application state management tool many Mac Admins across the globe use. Some out-of-box features of Munki solve problems many commercial MDMs still cannot solve to this day. It allows a Mac Admin to write some declarative data and have Munki takes care of the rest for you. We use it to manage and patch all of our third party apps in conjunction with AutoPKG.]]></description>
</item>
<item>
    <title>Using Custom MDM Payloads for FleetDM Labels</title>
    <link>https://t-lark.github.io/posts/using-custom-mdm-payloads-for-fleet-labels/</link>
    <pubDate>Thu, 21 Mar 2024 17:45:59 -0700</pubDate>
    <author>Author</author>
    <guid>https://t-lark.github.io/posts/using-custom-mdm-payloads-for-fleet-labels/</guid>
    <description><![CDATA[Programmatically Apply FleetDM Labels from Identity Data For a long time now it has been considered a &ldquo;bad practice,&rdquo; to join a macOS computer to any sort of directory service. Long have past the days of Binding to Active Directory, and the ancient lore of the golden (or magic) triangle is nearly lost in time, like tears in the rain. The one thing that we could consider missing from these days was the ability to locally query user and identity data through native tools like dscl in macOS.]]></description>
</item>
<item>
    <title>Snowflake Osquery Fleet Magic</title>
    <link>https://t-lark.github.io/posts/snowflake-osquery-fleet-magic/</link>
    <pubDate>Thu, 13 Jan 2022 17:07:04 -0800</pubDate>
    <author>tlark</author>
    <guid>https://t-lark.github.io/posts/snowflake-osquery-fleet-magic/</guid>
    <description><![CDATA[Snowflake, osquery and Fleet is Pure Magic! Many of you have probably heard of osquery, which is software you can install onto a computer that allows humans to query the OS to return fast and reliable system data. Osquery is not new, and many Organizations have been using it in various capacity for years now. Vendors and developers also ship osquery with their products these days as well. This allows a developer or vendor to collect local data fast and reliably for their software and solutions.]]></description>
</item>
<item>
    <title>Shipping Jamf Webhooks with Fivetran</title>
    <link>https://t-lark.github.io/posts/shipping-jamf-webhooks/</link>
    <pubDate>Sat, 19 Sep 2020 21:27:27 -0700</pubDate>
    <author>tlark</author>
    <guid>https://t-lark.github.io/posts/shipping-jamf-webhooks/</guid>
    <description><![CDATA[Shipping Jamf Pro Webhooks to Snowflake Jamf Pro has a builtin feature where you have the ability to ship a webhook event when specific events happen in their application. This allows for a near real time feed of event based data which you can consume and leverage to gain insights about your fleet. Jamf provides some documentation online, found here.
Webhooks are generated automatically, and near instantly when an event occurs.]]></description>
</item>
</channel>
</rss>
