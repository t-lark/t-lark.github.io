<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Data - Tag - t-lark.github.io</title>
        <link>https://t-lark.github.io/tags/data/</link>
        <description>Data - Tag - t-lark.github.io</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Tue, 14 Jan 2025 15:35:46 -0800</lastBuildDate><atom:link href="https://t-lark.github.io/tags/data/" rel="self" type="application/rss+xml" /><item>
    <title>Building Endpoint Performance Metrics</title>
    <link>https://t-lark.github.io/posts/building_endpoint_performance_metrics/</link>
    <pubDate>Tue, 14 Jan 2025 15:35:46 -0800</pubDate>
    <author>tlark</author>
    <guid>https://t-lark.github.io/posts/building_endpoint_performance_metrics/</guid>
    <description><![CDATA[<p>Many organizations today still struggle with hardware refresh, right sizing hardware specs, and understanding the performance
impact of tools and software across their fleet of end user devices. This has been a problem since the beginning of humans
incorporating technology into their professional lives. In my 25+ year career I don&rsquo;t think I have ever had a job where
these problems were considered solved, and I don&rsquo;t think we ever got close to solving them. A major factor we have all faced
while trying to solve this problem is the lack of data compounded by the problem of being able to use and leverage the data
in a meaningful way.</p>]]></description>
</item>
<item>
    <title>Leveraging Application Usage Data From Munki</title>
    <link>https://t-lark.github.io/posts/app-usage-data-munki-fleet-snowflake/</link>
    <pubDate>Tue, 26 Mar 2024 18:43:26 -0700</pubDate>
    <author>tlark</author>
    <guid>https://t-lark.github.io/posts/app-usage-data-munki-fleet-snowflake/</guid>
    <description><![CDATA[<a class="lightgallery" href="/img/fleet_munki_snowflake.png" title="/img/fleet_munki_snowflake.png" data-thumbnail="/img/fleet_munki_snowflake.png">
        
    </a>
<h3 id="getting-application-usage-data-at-scale-with-munki">Getting Application Usage Data at Scale With Munki</h3>
<p><a href="https://github.com/munki/munki" target="_blank" rel="noopener noreffer ">Munki</a> is a series of tools and a popular application state management tool many Mac Admins across the globe
use. Some out-of-box features of Munki solve problems many commercial MDMs still cannot solve to this day. It allows
a Mac Admin to write some declarative data and have Munki takes care of the rest for you. We use it to manage
and patch all of our third party apps in conjunction with <a href="https://github.com/autopkg/autopkg" target="_blank" rel="noopener noreffer ">AutoPKG</a>.</p>]]></description>
</item>
<item>
    <title>Using Custom MDM Payloads for FleetDM Labels</title>
    <link>https://t-lark.github.io/posts/using-custom-mdm-payloads-for-fleet-labels/</link>
    <pubDate>Thu, 21 Mar 2024 17:45:59 -0700</pubDate>
    <author>tlark</author>
    <guid>https://t-lark.github.io/posts/using-custom-mdm-payloads-for-fleet-labels/</guid>
    <description><![CDATA[<h1 id="programmatically-apply-fleetdm-labels-from-identity-data">Programmatically Apply FleetDM Labels from Identity Data</h1>
<p>For a long time now it has been considered a &ldquo;bad practice,&rdquo; to join a macOS computer to any sort of directory service.
Long have past the days of Binding to Active Directory, and the ancient lore of <a href="https://krypted.com/tag/magic-triangle/" target="_blank" rel="noopener noreffer ">the golden (or magic) triangle</a>
is nearly lost in time, like tears in the rain. The one thing that we could consider missing from these days was the
ability to locally query user and identity data through native tools like <code>dscl</code> in macOS. I have seen very clever
replacement solutions over the years to get this data down to a macOS end user devices across various enterprises, but
one thing has always bothered me about every method I have seen or sometimes used. The common theme was that they were all not very
security focused solutions. At a previous job, LDAP lookups were just straight up open to anyone on network, like it did
not have any authentication at all. When I was in vendor space I witnessed customers having various <code>curl</code> solutions
to grab that data from some system they could cache locally. Typically, these also were not very secure either.</p>]]></description>
</item>
<item>
    <title>Snowflake Osquery Fleet Magic</title>
    <link>https://t-lark.github.io/posts/snowflake-osquery-fleet-magic/</link>
    <pubDate>Thu, 13 Jan 2022 17:07:04 -0800</pubDate>
    <author>tlark</author>
    <guid>https://t-lark.github.io/posts/snowflake-osquery-fleet-magic/</guid>
    <description><![CDATA[<h1 id="snowflake-osquery-and-fleet-is-pure-magic">Snowflake, osquery and Fleet is Pure Magic!</h1>
<p>Many of you have probably heard of <a href="https://osquery.io/" target="_blank" rel="noopener noreffer ">osquery</a>, which is software you can install onto a computer that
allows humans to query the OS to return fast and reliable system data. Osquery is not new, and many Organizations have been
using it in various capacity for years now. Vendors and developers also ship osquery with their products these days as well.
This allows a developer or vendor to collect local data fast and reliably for their software and solutions.</p>]]></description>
</item>
<item>
    <title>Shipping Jamf Webhooks with Fivetran</title>
    <link>https://t-lark.github.io/posts/shipping-jamf-webhooks/</link>
    <pubDate>Sat, 19 Sep 2020 21:27:27 -0700</pubDate>
    <author>tlark</author>
    <guid>https://t-lark.github.io/posts/shipping-jamf-webhooks/</guid>
    <description><![CDATA[<h1 id="shipping-jamf-pro-webhooks-to-snowflake">Shipping Jamf Pro Webhooks to Snowflake</h1>
<p>Jamf Pro has a builtin feature where you have the ability to ship a webhook event when specific events happen in their
application.  This allows for a near real time feed of event based data which you can consume and leverage to gain insights
about your fleet.  Jamf provides some documentation online, found <a href="https://www.jamf.com/developers/webhooks/" target="_blank" rel="noopener noreffer ">here</a>.</p>
<p>Webhooks are generated automatically, and near instantly when an event occurs.  In the linked documentation above you
will see all the possible webhooks and sample data of what each webhook ships.  There are many ways to ship webhooks,
and you can choose from many paths to take.  You can roll your own webhook receiver, you can ship webhooks directly to
cloud storage (S3, Azure Blob, GCP Cloud Storage), use one of many data ingestion tools, and so forth.  Right now we are
leveraging a tool called <a href="https://fivetran.com/" target="_blank" rel="noopener noreffer ">Fivetran</a>.  Fivetran has built in integration to many SaaS and cloud
services.  What tools work best for your Organization will be up to your Org to decide.</p>]]></description>
</item>
</channel>
</rss>
