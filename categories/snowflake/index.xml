<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Snowflake - Category - t-lark.github.io</title>
        <link>https://t-lark.github.io/categories/snowflake/</link>
        <description>Snowflake - Category - t-lark.github.io</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Thu, 03 Apr 2025 12:18:44 -0700</lastBuildDate><atom:link href="https://t-lark.github.io/categories/snowflake/" rel="self" type="application/rss+xml" /><item>
    <title>Managing Licensed Software with Data</title>
    <link>https://t-lark.github.io/posts/managing_licensed_software/</link>
    <pubDate>Thu, 03 Apr 2025 12:18:44 -0700</pubDate>
    <author>tlark</author>
    <guid>https://t-lark.github.io/posts/managing_licensed_software/</guid>
    <description><![CDATA[<h2 id="turn-an-it-cost-center-into-an-it-cost-savings-center">Turn an IT Cost Center into an IT Cost Savings Center!</h2>
<p>So many times in my career I have heard IT/Ops teams be referred to as overhead. I have also heard IT being described as
&ldquo;just keeping the lights on,&rdquo; and all the adjacent things one can say similar to this. These type of statements has always
made me want to prove that IT isn&rsquo;t really just those type of things. I have always been trying to implement some sort of
cost savings where we can definitively decide where to cut costs. You never want to cut costs around things that have
a high positive impact. Since in many ways you do get what you pay for at times, and what you pay for may be very worth
it. So, IT is a cost savings center, a service provider, an enabler, an enhancer and much more than some of the
stereotypical things you might hear about how people perceive IT.</p>]]></description>
</item>
<item>
    <title>Building Endpoint Performance Metrics</title>
    <link>https://t-lark.github.io/posts/building_endpoint_performance_metrics/</link>
    <pubDate>Tue, 14 Jan 2025 15:35:46 -0800</pubDate>
    <author>tlark</author>
    <guid>https://t-lark.github.io/posts/building_endpoint_performance_metrics/</guid>
    <description><![CDATA[<p>Many organizations today still struggle with hardware refresh, right sizing hardware specs, and understanding the performance
impact of tools and software across their fleet of end user devices. This has been a problem since the beginning of humans
incorporating technology into their professional lives. In my 25+ year career I don&rsquo;t think I have ever had a job where
these problems were considered solved, and I don&rsquo;t think we ever got close to solving them. A major factor we have all faced
while trying to solve this problem is the lack of data compounded by the problem of being able to use and leverage the data
in a meaningful way.</p>]]></description>
</item>
<item>
    <title>Leveraging Application Usage Data From Munki</title>
    <link>https://t-lark.github.io/posts/app-usage-data-munki-fleet-snowflake/</link>
    <pubDate>Tue, 26 Mar 2024 18:43:26 -0700</pubDate>
    <author>tlark</author>
    <guid>https://t-lark.github.io/posts/app-usage-data-munki-fleet-snowflake/</guid>
    <description><![CDATA[<a class="lightgallery" href="/img/fleet_munki_snowflake.png" title="/img/fleet_munki_snowflake.png" data-thumbnail="/img/fleet_munki_snowflake.png">
        
    </a>
<h3 id="getting-application-usage-data-at-scale-with-munki">Getting Application Usage Data at Scale With Munki</h3>
<p><a href="https://github.com/munki/munki" target="_blank" rel="noopener noreffer ">Munki</a> is a series of tools and a popular application state management tool many Mac Admins across the globe
use. Some out-of-box features of Munki solve problems many commercial MDMs still cannot solve to this day. It allows
a Mac Admin to write some declarative data and have Munki takes care of the rest for you. We use it to manage
and patch all of our third party apps in conjunction with <a href="https://github.com/autopkg/autopkg" target="_blank" rel="noopener noreffer ">AutoPKG</a>.</p>]]></description>
</item>
<item>
    <title>More Osquery Data Modeling in Snowflake</title>
    <link>https://t-lark.github.io/posts/more-osquery-data-modeling-snowflake/</link>
    <pubDate>Thu, 25 Jan 2024 20:24:28 -0800</pubDate>
    <author>tlark</author>
    <guid>https://t-lark.github.io/posts/more-osquery-data-modeling-snowflake/</guid>
    <description><![CDATA[<h1 id="data-modeling-osquery-data-in-snowflake">Data Modeling osquery Data in Snowflake</h1>
<p>We have been working on many projects the past few months, and osquery data pipelines with the help of <a href="https://fleetdm.com/" target="_blank" rel="noopener noreffer ">FleetDM</a>
has been one of our constant works in progress. Before I dive into the data modeling part, I wanted to share how we scaled
this data out. We ended up going forward with FleetDM&rsquo;s SaaS offering over self-hosting the app. However, we are still
streaming query results from FleetDM cloud to Snowflake over <a href="https://aws.amazon.com/kinesis/data-firehose/" target="_blank" rel="noopener noreffer ">AWS Kinesis Firehose</a> and
we now have data streaming from FleetDM into Snowflake at a very fast rate and high volume. We are typically collecting
data from osquery every hour on most things, and we have a lesser number of queries that run every 12 hours or once a
day.</p>]]></description>
</item>
<item>
    <title>Working with osquery Data in Snowflake</title>
    <link>https://t-lark.github.io/posts/osquery-data-in-snowflake/</link>
    <pubDate>Thu, 31 Aug 2023 18:01:31 -0700</pubDate>
    <author>tlark</author>
    <guid>https://t-lark.github.io/posts/osquery-data-in-snowflake/</guid>
    <description><![CDATA[<p>I recently told my dog, Booms, all about how you can use osquery data in Snowflake. Needless to say, he was quite impressed
with all the use cases and in-depth data you can model about your fleet of laptops using osquery data in Snowflake.</p>
<a class="lightgallery" href="/img/booms-snow1.jpg" title="/img/booms-snow1.jpg" data-thumbnail="/img/booms-snow1.jpg">
        
    </a>
<blockquote>
<p>Booms came to the office with me, and he even got a bit of company swag! As we spent the day working I told him
all about all the work my team was doing with osquery. Anyone can see in this pic of him, he is very impressed
with the speed and scale one can leverage data from osquery in Snowflake</p>]]></description>
</item>
<item>
    <title>Servicenow Asset Data in Snowflake</title>
    <link>https://t-lark.github.io/posts/servicenow-asset-data-in-snowflake/</link>
    <pubDate>Tue, 28 Mar 2023 18:49:24 -0700</pubDate>
    <author>tlark</author>
    <guid>https://t-lark.github.io/posts/servicenow-asset-data-in-snowflake/</guid>
    <description><![CDATA[<p>Inventory Asset data is extremely important to any organization. It is also some of the most difficult data to keep
accurate and up-to-date. We have been shipping ServiceNow data to Snowflake here for a good while. Over the years the asset data
has proven time after time to be extremely valuable. It helps filter out tons of noise and allows one to focus on
specific asset data at any given time. Just by creating some simple queries and joining ServiceNow data with other data
sources. I recently created a new <a href="https://docs.snowflake.com/en/user-guide/views-introduction" target="_blank" rel="noopener noreffer ">view</a> in Snowflake to help us better filter data down to more specifics.</p>]]></description>
</item>
<item>
    <title>Complete Asset Oversight with the Data Cloud</title>
    <link>https://t-lark.github.io/posts/complete-asset-oversight-datacloud/</link>
    <pubDate>Mon, 08 Aug 2022 21:48:09 -0700</pubDate>
    <author>tlark</author>
    <guid>https://t-lark.github.io/posts/complete-asset-oversight-datacloud/</guid>
    <description><![CDATA[<h1 id="gain-all-the-insights-you-never-had">Gain All the Insights You Never Had</h1>
<p>Asset and Inventory controls are difficult, and many Orgs spend tons of time and effort to try to solve problems around
this very subject. In fact, they will hire humans, and spend lots of time and money to also get a hold of their inventory of
assets. This problem is still very much difficult to solve, but the Data Cloud makes this problem at least solvable.
I have been in tech for over 20 years, and I have even had jobs where inventory of assets was one of my job duties. I
had a local database I built on a Linux desktop and a barcode scanner where I could manage my own little shop of computers
and computer parts. I would manually enter data, I would scan barcodes, and I even had a sign-out sheet for people to sign
for things they took, so I could balance my books later on. Systems like this do not scale, they are very error-prone,
and they take so much labor. Oftentimes I had to play asset detective and dig through our IT software, the home-grown
database that I had, and the various paperwork from other systems to get a feel for what our inventory actually was.
Also, I was very new to Linux and databases at the time, and I highly doubt my little pet project was really any
good at all. It was at least something I suppose.</p>]]></description>
</item>
<item>
    <title>Snowflake Osquery Fleet Magic</title>
    <link>https://t-lark.github.io/posts/snowflake-osquery-fleet-magic/</link>
    <pubDate>Thu, 13 Jan 2022 17:07:04 -0800</pubDate>
    <author>tlark</author>
    <guid>https://t-lark.github.io/posts/snowflake-osquery-fleet-magic/</guid>
    <description><![CDATA[<h1 id="snowflake-osquery-and-fleet-is-pure-magic">Snowflake, osquery and Fleet is Pure Magic!</h1>
<p>Many of you have probably heard of <a href="https://osquery.io/" target="_blank" rel="noopener noreffer ">osquery</a>, which is software you can install onto a computer that
allows humans to query the OS to return fast and reliable system data. Osquery is not new, and many Organizations have been
using it in various capacity for years now. Vendors and developers also ship osquery with their products these days as well.
This allows a developer or vendor to collect local data fast and reliably for their software and solutions.</p>]]></description>
</item>
<item>
    <title>IT &amp; Ops Data with Snowflake Part III</title>
    <link>https://t-lark.github.io/posts/ops-data-snowflake-pt3/</link>
    <pubDate>Tue, 10 Aug 2021 20:02:00 -0700</pubDate>
    <author>tlark</author>
    <guid>https://t-lark.github.io/posts/ops-data-snowflake-pt3/</guid>
    <description><![CDATA[<h1 id="gain-oversight-of-your-asset-inventory-with-snowflake">Gain Oversight of your Asset Inventory with Snowflake</h1>
<p>Welcome to Part III of my mini blog series on being data driven with Snowflake. This post will be solely dedicated to
how an organization can leverage a platform like Snowflake to improve their asset and inventory controls. Both <a href="https://t-lark.github.io/posts/ops-data-snowflake/" target="_blank" rel="noopener noreffer ">Part I</a>
and <a href="https://t-lark.github.io/posts/ops-data-snowflake-pt2/" target="_blank" rel="noopener noreffer ">Part II</a> can be viewed with those links if you haven&rsquo;t read
them yet. This post will focus on end user devices for the most part and not networking hardware, application catalogs,
servers, and so forth.  The concepts in this post could be applied to those things though.</p>]]></description>
</item>
<item>
    <title>IT &amp; Ops Data with Snowflake Part II</title>
    <link>https://t-lark.github.io/posts/ops-data-snowflake-pt2/</link>
    <pubDate>Thu, 22 Apr 2021 20:02:00 -0700</pubDate>
    <author>tlark</author>
    <guid>https://t-lark.github.io/posts/ops-data-snowflake-pt2/</guid>
    <description><![CDATA[<h1 id="working-with-data-in-snowflake">Working with Data in Snowflake</h1>
<p>Welcome to Part II of my miniseries blog around Snowflake with IT &amp; Ops Data. If you have not read <a href="https://t-lark.github.io/posts/ops-data-snowflake/" target="_blank" rel="noopener noreffer ">Part I</a>,
you may click that link to read it first. Data has always been very important, and Snowflake just makes using the data a ton
easier than we have ever had before. This post will focus on some basic ways one can work with data with in Snowflake.
For this blog I will be focusing on JSON data stored in Snowflake columns. <a href="https://en.wikipedia.org/wiki/JSON" target="_blank" rel="noopener noreffer ">JSON</a> documents are very common all over tech. Especially in things
like <a href="https://en.wikipedia.org/wiki/Representational_state_transfer" target="_blank" rel="noopener noreffer ">REST APIs</a>, so if you haven&rsquo;t worked with JSON
you will work with JSON data most likely at some point.</p>]]></description>
</item>
</channel>
</rss>
